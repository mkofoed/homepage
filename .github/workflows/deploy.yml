name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

#2
env:
  IMAGE_NAME: "homepage"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Build container image
        working-directory: ./ops
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image to Docker Hub
        working-directory: ./ops
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.production.yml to remote machine
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ''
          source: ./ops/docker-compose.production.yml
          target: /homepage/docker-compose.production.yml

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ''
          envs: IMAGE_NAME,GITHUB_SHA
          script: |
            # Log in to Docker Hub
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            # Pull the latest image from Docker Hub
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$GITHUB_SHA

            # Stop running container
            docker stop $(echo $IMAGE_NAME)

            # Remove old container
            docker rm $(echo $IMAGE_NAME)

            # Run a new container from the latest image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$GITHUB_SHA
